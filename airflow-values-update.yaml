# BreakRoom 1 Summary:
# 1.Skip steps that involves NFS, that is, step 11 to 14.
# 2.Use the Airflow Community Chart:
#   a. Step 16:
#     i.helm repo add airflow-stable https://airflow-helm.github.io/charts
#     ii.helm repo update
# 3.Edit the airflow-values.yaml file to the Community Chart values (file at the end). Remember to change the “repo” and “repoSubPath” parameters of gitSync to your own repo when you have a DAG that is ready to test, for now it’s the hello_world.py in the Google-Africa-DEB repo.
# 4.Before deploying the new chart, remember to remove any remaining PVC (if you deployed before the official chart of if you want a clean deploy).
#   a.kubectl get PVC -A
#   b.kubectl delete PVC $PVC_NAME -n airflow
# 5.Deploy airflow
#   a.Step 17:
#     i.helm upgrade --install airflow -f airflow-values.yaml airflow-stable/airflow --namespace airflow
##### ## install using helm 3 (alternative to i above using custom-values.yaml file)###################################
# helm install \
#   "$AIRFLOW_NAME" \
#   airflow-stable/airflow \
#   --namespace "$AIRFLOW_NAMESPACE" \
#   --version "8.X.X" \
#   --values ./custom-values.yaml
###################################################
#
# 6.Connect to the web interface
#   a.kubectl port-forward svc/${AIRFLOW_NAME}-web 8080:8080 --namespace $AIRFLOW_NAMESPACE
# e.g kubectl port-forward svc/airflow-webserver 8080:8080 --namespace airflow
# ${AIRFLOW_NAME} and $AIRFLOW_NAMESPACE should be: airflow

###################################
## COMPONENT | Triggerer
###################################
triggerer:
  ## if the airflow triggerer should be deployed
  ## - [WARNING] the triggerer component was added in airflow 2.2.0
  ## - [WARNING] if `airflow.legacyCommands` is `true` the triggerer will NOT be deployed
  ##
  enabled: false
###################################
## COMPONENT | Flower
###################################
flower:
  ## if the airflow flower UI should be deployed
  ##
  enabled: false
###################################
## CONFIG | Airflow Logs
###################################
logs:
  ## the airflow logs folder
  ##
  path: /usr/local/airflow/logs
  ## configs for the logs PVC
  ##
  persistence:
    ## if a persistent volume is mounted at `logs.path`
    ##
    enabled: false
###################################
## CONFIG | Airflow DAGs
###################################
dags:
  ## the airflow dags folder
  ##
  path: /usr/local/airflow/dags
  ## configs for the git-sync sidecar (https://github.com/kubernetes/git-sync)
  ##
  gitSync:
    ## if the git-sync sidecar container is enabled
    ##
    enabled: true
    ## the url of the git repo
    ##
    ## ____ EXAMPLE _______________
    ##  # https git repo
    ##  repo: “https://github.com/USERNAME/REPOSITORY.git”
    ##
    ## ____ EXAMPLE _______________
    ##  # ssh git repo
    ##  repo: “git@github.com:USERNAME/REPOSITORY.git”
    ##
    repo: “https://github.com/wizelineacademy/Google-Africa-DEB”
    ## the sub-path within your repo where dags are located
    ## - only dags under this path within your repo will be seen by airflow,
    ##  (note, the full repo will still be cloned)
    ##
    repoSubPath: “session_04/exercises/airflow-gke/dags”
    ## the git branch to check out
    ##
    branch: main
###################################
## DATABASE | PgBouncer
###################################
pgbouncer:
  ## if the pgbouncer Deployment is created
  ##
  enabled: false
